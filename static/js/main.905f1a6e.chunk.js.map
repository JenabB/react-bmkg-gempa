{"version":3,"sources":["assets/images/BMKG-over5.png","assets/images/BMKG-Cuaca.png","assets/images/BMKG-About.png","assets/images/009-rainy.png","Cuaca.js","BMKG.js","Gempadirasakan.js","Contributor.js","Abouts.js","Layout.js","App.js","index.js","assets/images/BMKG-20.png","assets/images/001-cloudy day.png","assets/images/002-sunny.png"],"names":["module","exports","Cuaca","state","datacuaca","xmlParser","xml2js","Parser","explicitArray","axios","get","response","parseStringPromise","data","parsedXml","forecast","this","setState","console","error","log","className","area","map","dataforecast","index","Card","key","name","_","parameter","timerange","value","src","sunny","alt","width","cloudy","$","description","React","Component","BMKG","gempa","Infogempa","CardActionArea","CardContent","Typography","variant","component","Tanggal","gutterBottom","Potensi","color","Jam","Wilayah1","Wilayah2","Wilayah3","class","Magnitude","Kedalaman","Gempadirasakan","datadirasakan","Gempa","dirasakan","Dirasakan","Keterangan","Contributor","nama","sebagai","credit","Abouts","makeStyles","theme","root","flexGrow","Layout","Grid","container","spacing","direction","alignItems","justify","path","to","cuaca","kontributor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.905f1a6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BMKG-over5.186b4c8a.png\";","module.exports = __webpack_public_path__ + \"static/media/BMKG-Cuaca.783670b7.png\";","module.exports = __webpack_public_path__ + \"static/media/BMKG-About.4e8b81f3.png\";","module.exports = __webpack_public_path__ + \"static/media/009-rainy.173c8bfc.png\";","// Showing XML Data.\n// Based on this tutorial:\n// https://www.pluralsight.com/guides/how-to-display-xml-data-using-reactjs?fbclid=IwAR2ZHWSvbR6O7HsrwEeiQb7QTFyEEocrWfrYnQlsDUhotu91YrQ9a3snW1M\nimport React from \"react\";\nimport axios from \"axios\";\n// Library yang digunakan untuk parsing xml menjadi object\nimport xml2js from \"xml2js\";\nimport \"./Cuaca.css\";\nimport Card from \"@material-ui/core/Card\";\n\nimport cloudy from \"./assets/images/001-cloudy day.png\";\nimport rain from \"./assets/images/009-rainy.png\";\nimport sunny from \"./assets/images/002-sunny.png\";\n\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// NOTE : Pada artikel diatas, data dari contoh pertama sepertinya sudah di-parse\n// oleh server menjadi object jadi kita tinggal menampilkan datanya saja.\n// Data dari contoh kodingan ini hasilnya masih berupa string xml dan harus kita\n// ubah terlebih dahulu.\n\nclass Cuaca extends React.Component {\n  state = {\n    datacuaca: [],\n  };\n\n  async componentDidMount() {\n    const xmlParser = new xml2js.Parser({\n      // Konfigurasi ini digunakan untuk mencegah hasil parsing\n      // diubah menjadi array\n      // Untuk info lebih lanjut, silahkan pelajari dokumentasi:\n      // https://github.com/Leonidas-from-XIV/node-xml2js#options\n      explicitArray: false,\n    });\n    try {\n      const response = await axios.get(\n        \"https://data.bmkg.go.id/datamkg/MEWS/DigitalForecast/DigitalForecast-Bengkulu.xml\",\n        {\n          \"Content-Type\": \"application/xml;\",\n        }\n      );\n      // karena hasil xml belum di-parsing oleh server kita harus\n      // melakukan parsing-nya di client-side.\n      // Untuk mencegah terjadinya race condition kita bisa mengggunakan\n      // fitur parseStringPromise();\n      // https://github.com/Leonidas-from-XIV/node-xml2js#promise-usage\n      const parsedXml = await xmlParser.parseStringPromise(response.data);\n      // destructuring: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n      const {\n        data: { forecast },\n      } = parsedXml;\n      // setelah parsing berhasil, hasilnya akan kita simpan di state\n      this.setState({ datacuaca: forecast });\n    } catch (error) {\n      console.error(\"error\", error);\n    }\n  }\n\n  render() {\n    const { datacuaca } = this.state;\n    console.log(\"cuaca\", datacuaca);\n    // Tampilkan data...\n    return (\n      <div className=\"forecast-container\">\n        {datacuaca?.area?.map((dataforecast, index) => (\n          <div>\n            <Card key={index} className=\"cuaca-container\">\n              <h1>{dataforecast.name[0]._}</h1>\n              {dataforecast.parameter[6].timerange[0].value._ == \"1\" ? (\n                <img src={sunny} alt=\"weather\" width=\"80px\" />\n              ) : (\n                <img src={cloudy} alt=\"weather\" width=\"80px\" />\n              )}\n              <table>\n                <tr>\n                  <td>{dataforecast.parameter[0].$.description}</td>\n                  <td>{dataforecast.parameter[0].timerange[0].value._} %</td>\n                </tr>\n                <tr>\n                  <td>{dataforecast.parameter[5].$.description}</td>\n                  <td>\n                    {dataforecast.parameter[5].timerange[0].value[0]._} &deg;C\n                  </td>\n                </tr>\n              </table>\n            </Card>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Cuaca;\n","// Showing XML Data.\n// Based on this tutorial:\n// https://www.pluralsight.com/guides/how-to-display-xml-data-using-reactjs?fbclid=IwAR2ZHWSvbR6O7HsrwEeiQb7QTFyEEocrWfrYnQlsDUhotu91YrQ9a3snW1M\nimport React from \"react\";\nimport axios from \"axios\";\n// Library yang digunakan untuk parsing xml menjadi object\nimport xml2js from \"xml2js\";\nimport \"./BMKG.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// NOTE : Pada artikel diatas, data dari contoh pertama sepertinya sudah di-parse\n// oleh server menjadi object jadi kita tinggal menampilkan datanya saja.\n// Data dari contoh kodingan ini hasilnya masih berupa string xml dan harus kita\n// ubah terlebih dahulu.\n\nclass BMKG extends React.Component {\n  state = {\n    data: {},\n  };\n\n  async componentDidMount() {\n    const xmlParser = new xml2js.Parser({\n      // Konfigurasi ini digunakan untuk mencegah hasil parsing\n      // diubah menjadi array\n      // Untuk info lebih lanjut, silahkan pelajari dokumentasi:\n      // https://github.com/Leonidas-from-XIV/node-xml2js#options\n      explicitArray: false,\n    });\n    try {\n      const response = await axios.get(\n        \"https://data.bmkg.go.id/autogempa.xml\",\n        {\n          \"Content-Type\": \"application/xml;\",\n        }\n      );\n      // karena hasil xml belum di-parsing oleh server kita harus\n      // melakukan parsing-nya di client-side.\n      // Untuk mencegah terjadinya race condition kita bisa mengggunakan\n      // fitur parseStringPromise();\n      // https://github.com/Leonidas-from-XIV/node-xml2js#promise-usage\n      const parsedXml = await xmlParser.parseStringPromise(response.data);\n      // destructuring: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n      const {\n        Infogempa: { gempa },\n      } = parsedXml;\n      // setelah parsing berhasil, hasilnya akan kita simpan di state\n      this.setState({ data: gempa });\n    } catch (error) {\n      console.error(\"error\", error);\n    }\n  }\n\n  render() {\n    const { data } = this.state;\n    console.log(\"data\", data);\n    // Tampilkan data...\n    return (\n      <div className=\"containerBMKG\">\n        <Card className=\"cardContainer\">\n          <CardActionArea>\n            <img\n              className=\"gambar-gempa\"\n              src=\"https://data.bmkg.go.id/eqmap.gif\"\n              alt=\"Girl in a jacket\"\n            />\n            <CardContent>\n              <Typography\n                className=\"tanggalGempa\"\n                variant=\"body2\"\n                component=\"p\"\n              >\n                {data.Tanggal}\n              </Typography>\n              <Typography\n                className=\"titleCard\"\n                gutterBottom\n                variant=\"h5\"\n                component=\"h2\"\n              >\n                {data.Potensi}\n              </Typography>\n\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {data.Jam}\n              </Typography>\n              <div className=\"wilayahContainer\">\n                <p className=\"wilayah\">{data.Wilayah1}</p>\n                <p className=\"wilayah\">{data.Wilayah2}</p>\n                <p className=\"wilayah\">{data.Wilayah3}</p>\n              </div>\n            </CardContent>\n          </CardActionArea>\n          <div class=\"flex-container\">\n            <div>{data.Magnitude}</div>\n            <div>{data.Kedalaman}</div>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default BMKG;\n","// Showing XML Data.\n// Based on this tutorial:\n// https://www.pluralsight.com/guides/how-to-display-xml-data-using-reactjs?fbclid=IwAR2ZHWSvbR6O7HsrwEeiQb7QTFyEEocrWfrYnQlsDUhotu91YrQ9a3snW1M\nimport React from \"react\";\nimport axios from \"axios\";\n// Library yang digunakan untuk parsing xml menjadi object\nimport xml2js from \"xml2js\";\nimport \"./BMKG.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// NOTE : Pada artikel diatas, data dari contoh pertama sepertinya sudah di-parse\n// oleh server menjadi object jadi kita tinggal menampilkan datanya saja.\n// Data dari contoh kodingan ini hasilnya masih berupa string xml dan harus kita\n// ubah terlebih dahulu.\n\nclass Gempadirasakan extends React.Component {\n  state = {\n    datadirasakan: [],\n  };\n\n  async componentDidMount() {\n    const xmlParser = new xml2js.Parser({\n      // Konfigurasi ini digunakan untuk mencegah hasil parsing\n      // diubah menjadi array\n      // Untuk info lebih lanjut, silahkan pelajari dokumentasi:\n      // https://github.com/Leonidas-from-XIV/node-xml2js#options\n      explicitArray: false,\n    });\n    try {\n      const response = await axios.get(\n        \"https://data.bmkg.go.id/gempadirasakan.xml\",\n        {\n          \"Content-Type\": \"application/xml;\",\n        }\n      );\n      // karena hasil xml belum di-parsing oleh server kita harus\n      // melakukan parsing-nya di client-side.\n      // Untuk mencegah terjadinya race condition kita bisa mengggunakan\n      // fitur parseStringPromise();\n      // https://github.com/Leonidas-from-XIV/node-xml2js#promise-usage\n      const parsedXml = await xmlParser.parseStringPromise(response.data);\n      // destructuring: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n      const {\n        Infogempa: { Gempa },\n      } = parsedXml;\n      // setelah parsing berhasil, hasilnya akan kita simpan di state\n      this.setState({ datadirasakan: Gempa });\n    } catch (error) {\n      console.error(\"error\", error);\n    }\n  }\n\n  render() {\n    const { datadirasakan } = this.state;\n    console.log(\"Gempa Dirasakan\", datadirasakan);\n    // Tampilkan data...\n    return (\n      <div className=\"containerBMKG\">\n        {datadirasakan?.map((dirasakan, index) => (\n          <div key={index}>\n            <Card className=\"dirasakan-container\">\n              <h1>{dirasakan.Dirasakan}</h1>\n              <h1>{dirasakan.Kedalaman}</h1>\n              <h1>{dirasakan.Keterangan}</h1>\n              <h1>{dirasakan.Magnitude}</h1>\n            </Card>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Gempadirasakan;\n","import React from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport \"./Contributor.css\";\n\nconst Contributor = () => {\n  const credits = [\n    {\n      nama: \"Yogi Surya Pranata\",\n      sebagai: \"Developer & Idea\",\n    },\n    {\n      nama: \"kotakode.com\",\n      sebagai: \"Penyedia forum dan bantuan\",\n    },\n    {\n      nama: \"BMKG\",\n      sebagai: \"Open API\",\n    },\n\n    {\n      nama: \"fjstudio\",\n      sebagai: \"Weather Icons from flaticon.com\",\n    },\n    { nama: \"Hendra Agil\", sebagai: \"problem solver\" },\n  ];\n\n  return (\n    <div className=\"contributor-container\">\n      <h1>Kontributor</h1>\n      {credits.map((credit, index) => (\n        <div key={index}>\n          <table>\n            <tr>\n              <td>{credit.nama}</td>\n              <td>{credit.sebagai}</td>\n            </tr>\n          </table>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Contributor;\n","import React from \"react\";\n\nconst Abouts = () => {\n  return (\n    <div>\n      <h1>Tentang</h1>\n    </div>\n  );\n};\n\nexport default Abouts;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Cuaca from \"./Cuaca.js\";\nimport BMKG from \"./BMKG.js\";\nimport Gempadirasakan from \"./Gempadirasakan\";\nimport \"./Layout.css\";\nimport Contributor from \"./Contributor.js\";\nimport Abouts from \"./Abouts.js\";\nimport gempa from \"./assets/images/BMKG-over5.png\";\nimport cuaca from \"./assets/images/BMKG-Cuaca.png\";\nimport dirasakan from \"./assets/images/BMKG-20.png\";\nimport kontributor from \"./assets/images/BMKG-About.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Layout() {\n  return (\n    <div className=\"app-container\">\n      <Grid\n        container\n        spacing={3}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/tentang\">\n                <Abouts />\n              </Route>\n              <Route path=\"/kontributor\">\n                <Contributor />\n              </Route>\n              <Route path=\"/dirasakan\">\n                <Gempadirasakan />\n              </Route>\n              <Route path=\"/Cuaca\">\n                <Cuaca />\n              </Route>\n              <Route path=\"/\">\n                <BMKG />\n              </Route>\n            </Switch>\n\n            <nav className=\"float\">\n              <ul>\n                <li>\n                  <Link to=\"/\">\n                    <img src={gempa} alt=\"gempa\" width=\"30px\" />\n                    <p class=\"menu-title\">Gempa</p>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/cuaca\">\n                    {\" \"}\n                    <img src={cuaca} alt=\"gempa\" width=\"30px\" />\n                    <p class=\"menu-title\">Cuaca</p>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/dirasakan\">\n                    {\" \"}\n                    <img src={dirasakan} alt=\"gempa\" width=\"30px\" />\n                    <p class=\"menu-title\">Dirasakan</p>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/kontributor\">\n                    {\" \"}\n                    <img src={kontributor} alt=\"gempa\" width=\"30px\" />\n                    <p class=\"menu-title\">Kontributor</p>\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/tentang\">\n                    {\" \"}\n                    <img src={dirasakan} alt=\"gempa\" width=\"30px\" />\n                    <p class=\"menu-title\">Tentang</p>\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </Router>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Layout from \"./Layout.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/BMKG-20.9d4ea06e.png\";","module.exports = __webpack_public_path__ + \"static/media/001-cloudy day.3635e39c.png\";","module.exports = __webpack_public_path__ + \"static/media/002-sunny.b3253a76.png\";"],"sourceRoot":""}